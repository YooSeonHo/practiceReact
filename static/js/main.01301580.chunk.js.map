{"version":3,"sources":["components/MovieDetail.js","routes/Detail.js","components/Movie.js","routes/Home.js","App.js","index.js"],"names":["MovieDetail","title","rating","runtime","coverImg","descript","src","alt","Detail","useState","loading","setLoading","details","setDetails","id","useParams","getMovie","useCallback","a","fetch","json","data","movie","useEffect","large_cover_image","description_full","Movie","summary","genres","to","map","g","Home","movies","setMovies","getMovies","medium_cover_image","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAceA,MAZf,YAAkE,IAA5CC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,SAASC,EAAU,EAAVA,SACnD,OACI,gCACI,qBAAKC,IAAKF,EAAUG,IAAKN,IACzB,6BAAKA,IACL,iDAAoBE,KACpB,2CAAcD,KACbG,MCgCEG,MApCf,WACI,MAA6BC,oBAAS,GAAtC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA6BF,mBAAS,IAAtC,mBAAOG,EAAP,KAAeC,EAAf,KAEOC,EAAMC,cAAND,GACDE,EAAWC,sBAAW,sBAAC,4BAAAC,EAAA,sEAEnBC,MAAM,qDAAD,OAAsDL,IAFxC,8BAGvBM,OAHuB,OACnBA,EADmB,OAIzBT,GAAW,GACXE,EAAWO,EAAKC,KAAKC,OALI,2CAM3B,CAACR,IAMH,OAJAS,qBAAU,WACNP,MACF,CAACA,IAGC,8BACKN,EAAS,4CACN,gCACI,wCACA,cAAC,EAAD,CACIT,MAAOW,EAAQX,MACfC,OAAQU,EAAQV,OAChBC,QAASS,EAAQT,QACjBC,SAAUQ,EAAQY,kBAClBnB,SAAUO,EAAQa,yBCL3BC,MAxBf,YAAuD,IAAvCZ,EAAsC,EAAtCA,GAAIV,EAAkC,EAAlCA,SAAUH,EAAwB,EAAxBA,MAAO0B,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,OAC1C,OACI,gCACE,qBAAKtB,IAAKF,EAAUG,IAAKN,IACzB,6BACE,eAAC,IAAD,CAAM4B,GAAE,iBAAYf,GAApB,cAA8Bb,EAA9B,SAEF,4BAAI0B,IACJ,6BACGC,EAAOE,KAAI,SAACC,GAAD,OAAQ,6BAAaA,GAAJA,YC+B1BC,MAxCf,WACI,MAA6BvB,oBAAS,GAAtC,mBAAOC,EAAP,KAAeC,EAAf,KACF,EAA2BF,mBAAS,IAApC,mBAAOwB,EAAP,KAAcC,EAAd,KACMC,EAAS,uCAAG,4BAAAjB,EAAA,sEAERC,MAAM,wEAFE,8BAGZC,OAHY,OACVA,EADU,OAIhBT,GAAW,GACXuB,EAAUd,EAAKC,KAAKY,QALJ,2CAAH,qDAkBf,OATAV,qBAAU,WAMRY,MAEE,IAEF,8BACGzB,EAAS,4CAAuB,8BAC9BuB,EAAOH,KAAI,SAAAR,GAAK,OACf,cAAC,EAAD,CAEER,GAAIQ,EAAMR,GACVV,SAAUkB,EAAMc,mBAChBnC,MAAOqB,EAAMrB,MACb0B,QAASL,EAAMK,QACfC,OAAQN,EAAMM,QALTN,EAAMR,YCVRuB,MAXf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,aAAaC,QAAS,cAAC,EAAD,MAClC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,YCTjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.01301580.chunk.js","sourcesContent":["\n\nfunction MovieDetail({title, rating, runtime, coverImg,descript}){\n    return(\n        <div>\n            <img src={coverImg} alt={title} />\n            <h1>{title}</h1>\n            <h3>Running Time : {runtime}</h3>\n            <h3>Rating : {rating}</h3>\n            {descript}\n        </div>\n    );\n}\n\nexport default MovieDetail;","import {useParams} from \"react-router-dom\"\nimport { useEffect,useState } from \"react\";\nimport { useCallback } from \"react\";\nimport MovieDetail from \"../components/MovieDetail\";\n\nfunction Detail(){\n    const [loading,setLoading] = useState(true);\n    const [details,setDetails] = useState({});\n\n    const {id} = useParams();\n    const getMovie = useCallback(async() => {\n        const json = await(\n        await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)\n        ).json();\n        setLoading(false);\n        setDetails(json.data.movie);\n    },[id]);\n\n    useEffect(()=>{\n        getMovie();\n    },[getMovie]);\n\n    return(\n        <div>\n            {loading? <h1>Loading...</h1> : (\n                <div>\n                    <h1>Detail</h1>\n                    <MovieDetail \n                        title={details.title}\n                        rating={details.rating}\n                        runtime={details.runtime}\n                        coverImg={details.large_cover_image}\n                        descript={details.description_full}\n                    />\n                </div>\n            ) }\n            \n        </div>\n    );\n}\n\nexport default Detail;","import propTypes from \"prop-types\";\nimport {Link} from 'react-router-dom';\n\nfunction Movie({id, coverImg, title, summary, genres}){\n    return(\n        <div>\n          <img src={coverImg} alt={title}/>\n          <h2>\n            <Link to={`/movie/${id}`}  > {title} </Link>\n            </h2>\n          <p>{summary}</p>\n          <ul>\n            {genres.map((g) => (<li key={g}>{g}</li>))}\n          </ul>\n        </div>\n    );\n}\n\n\nMovie.propTypes = {\n    id: propTypes.number.isRequired,\n    coverImg: propTypes.string.isRequired,\n    title:propTypes.string.isRequired,\n    summary:propTypes.string.isRequired,\n    genres:propTypes.arrayOf(propTypes.string).isRequired,\n};\n\nexport default Movie;","import { useEffect, useState } from \"react\";\nimport Movie from '../components/Movie'\n\nfunction Home(){\n    const [loading,setLoading] = useState(true);\n  const [movies,setMovies] = useState([]);\n  const getMovies = async () => {\n    const json = await(\n      await fetch('https://yts.mx/api/v2/list_movies.json?minimum_rating=9&sort_by=year')\n      ).json();\n    setLoading(false);\n    setMovies(json.data.movies);\n    //여기에 console.log(movies)를 쓰면 제일 마지막에 나오는데 왜 빈 배열일까? return 앞에 쓰면 객체 차있는 배열로 나옴...ㅠㅠ\n  }\n\n  useEffect(()=>{\n    // fetch('https://yts.mx/api/v2/list_movies.json?minimum_rating=9&sort_by=year')\n    // .then(response => response.json())\n    // .then(json=>{\n    //   setLoading(false);\n    //   setMovies(json.data.movies); fetch->then을 위 async-await을 사용한 getMovies로 바꿔서 사용함 ㅋㅋ\\\n    getMovies();\n\n    },[]);\n  return(\n    <div>\n      {loading? <h1>Loading...</h1> : (<div>\n        {movies.map(movie=> \n          <Movie \n            key={movie.id}\n            id={movie.id}\n            coverImg={movie.medium_cover_image} \n            title={movie.title} \n            summary={movie.summary}\n            genres={movie.genres}\n            />\n        )}\n        </div>)\n        }\n    </div>\n  );\n}\n\nexport default Home;","import {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport Detail from \"./routes/Detail\";\nimport Home from './routes/Home'\n\nfunction App(){\n  return(\n    <Router>\n      <Routes>\n        <Route path='/movie/:id' element={<Detail />}/>\n        <Route path='/' element={<Home />}/>\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n\n\n// import { func } from \"prop-types\";\n// import { useEffect, useState } from \"react\";\n\n// function App(){\n//   const [loading, setLoading] = useState(true);\n//   const [coins, setCoins] = useState([]);\n//   const [selected, setSelected] = useState({});\n//   const [isSelected, setIsSelected] = useState(false);\n//   const [value, setValue] = useState(0);\n\n//   const onChange = (event) => {\n//     setValue(event.target.value);\n//   }\n  \n//   const onSelect = (event) => {\n//     const index = event.target.selectedIndex; //걍 index가 아니라 selectedIndex구낭~~\n//     setSelected(coins[index]);\n//     setIsSelected(true);\n//     console.log(selected);\n//   }\n\n//   function Trade(){\n//     return(\n//       <div>\n//         <h3>Trade to {selected.name}</h3>\n//         <input \n//           value={value}\n//           onChange={onChange}\n//           type='number'\n//           placeholder='How much money do you have?'\n//           />\n//           USD\n//         <p>You can get</p>\n//         <input \n//           value= {value / selected.quotes.USD.price}\n//           placeholder={selected.symbol}\n//           disabled />\n//         {selected.symbol}\n//     </div>\n//     );\n//   }\n\n  \n\n//   useEffect(()=>{\n//     fetch('https://api.coinpaprika.com/v1/tickers')\n//     .then(response => response.json())\n//     .then(json =>{\n//       setCoins(json);\n//       setLoading(false);\n//     })\n//   },[])\n\n//   return(\n//     <div>\n//       <h1>The Coins! {loading? null: `(${coins.length})`}</h1>\n//       {loading? <strong>Loading...</strong>: \n//       <select onChange={onSelect}>\n//         {coins.map((item) => (\n//           <option key={item.id}>{item.name} ({item.symbol}) : ${item.quotes.USD.price} USD</option>\n//         ))\n//       }\n//       </select>}\n//       <hr />\n      \n//         <br />\n//         {isSelected? <Trade />: null}\n//     </div>\n//   );\n// }\n\n// export default App\n\n\n\n\n\n//make to-do\n// import { useState } from \"react/cjs/react.development\";\n\n\n// function App(){\n//   const [toDo,setToDo] = useState('');\n//   const [toDos, setToDos] = useState([]);\n\n//   const onChange = (event) => setToDo(event.target.value);\n//   const onSubmit = (event) => {\n//     event.preventDefault();\n//     if(toDo ==='')\n//     {\n//       return;\n//     }\n//     setToDos((currentArray) => [toDo, ...currentArray]);\n//     setToDo('');\n//   }\n\n//   return(\n//     <div>\n//       <h1>My To Dos ({toDos.length})</h1>\n//       <form onSubmit={onSubmit}>\n//         <input\n//          onChange={onChange}\n//          value={toDo}\n//          type='text'\n//          placeholder='Write your to do' />\n//         <button>Add To Do</button>\n//       </form>\n//       <hr />\n//       <ul>\n//         {toDos.map((item, index) => <li key={index}>{item}</li>)}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default App","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}